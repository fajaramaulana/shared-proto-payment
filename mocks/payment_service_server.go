// Code generated by mockery v2.46.3. DO NOT EDIT.

package mocks

import (
	context "context"

	payment "github.com/fajaramaulana/shared-proto-payment/proto/payment"
	mock "github.com/stretchr/testify/mock"
)

// PaymentServiceServer is an autogenerated mock type for the PaymentServiceServer type
type PaymentServiceServer struct {
	mock.Mock
}

// CreatePayment provides a mock function with given fields: _a0, _a1
func (_m *PaymentServiceServer) CreatePayment(_a0 context.Context, _a1 *payment.PaymentRequest) (*payment.PaymentResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for CreatePayment")
	}

	var r0 *payment.PaymentResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *payment.PaymentRequest) (*payment.PaymentResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *payment.PaymentRequest) *payment.PaymentResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*payment.PaymentResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *payment.PaymentRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetPaymentStatus provides a mock function with given fields: _a0, _a1
func (_m *PaymentServiceServer) GetPaymentStatus(_a0 context.Context, _a1 *payment.PaymentStatusRequest) (*payment.PaymentStatusResponse, error) {
	ret := _m.Called(_a0, _a1)

	if len(ret) == 0 {
		panic("no return value specified for GetPaymentStatus")
	}

	var r0 *payment.PaymentStatusResponse
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, *payment.PaymentStatusRequest) (*payment.PaymentStatusResponse, error)); ok {
		return rf(_a0, _a1)
	}
	if rf, ok := ret.Get(0).(func(context.Context, *payment.PaymentStatusRequest) *payment.PaymentStatusResponse); ok {
		r0 = rf(_a0, _a1)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*payment.PaymentStatusResponse)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, *payment.PaymentStatusRequest) error); ok {
		r1 = rf(_a0, _a1)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// mustEmbedUnimplementedPaymentServiceServer provides a mock function with given fields:
func (_m *PaymentServiceServer) mustEmbedUnimplementedPaymentServiceServer() {
	_m.Called()
}

// NewPaymentServiceServer creates a new instance of PaymentServiceServer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPaymentServiceServer(t interface {
	mock.TestingT
	Cleanup(func())
}) *PaymentServiceServer {
	mock := &PaymentServiceServer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
